#!/bin/bash

# Docker settings
## REGISTRY: [optional] - Docker registry path including trailing "/". Example: registry.company.com/demo/
export REGISTRY=
## IMAGE: <required> - Docker image name for this project. Example: myapp
export IMAGE=myapp
## TAG: [optional] - Version tag for this Docker image including the ":" prefix. Example: :v20180302
export TAG=:v$(date +%Y%m%d)
## CONTAINER: [optional] - Name of the Docker container including the --name switch. Example --name myapp
export CONTAINER=--name ${IMAGE}
## Port mapping [optional] - Mapping of external to internal ports including the -p switch. Example -p 80:8080 
export PORT_MAP=-p 80:8080
## Volume mappig [optional] - Mapping of external to internal paths including the -v switch. Example $(pwd):/wd
export VOLUME_MAP=-v ($)pwd:/wd
## Network [optional] - Network name including the --net switch. Example --net mynet
export NETWORK=--net mynet

# Proxy settings
export http_proxy=http://PITC-Zscaler-US-SanRamon-Shared.proxy.corporate.ge.com:80
export https_proxy=http://PITC-Zscaler-US-SanRamon-Shared.proxy.corporate.ge.com:80
export no_proxy=ge.com,localhost

# Helper functions
## Detect current operating system
function os
{
        UNAME=$(uname -a)
        if [ $(echo $UNAME | awk '{print $1}') == "Darwin" ]; then
                export OPERATING_SYSTEM="MacOS"
        elif [ $(echo $UNAME | awk '{print $1}') == "Linux" ]; then
                export OPERATING_SYSTEM="Linux"
        elif [ ${UNAME:0:5} == "MINGW" ]; then
                export OPERATING_SYSTEM="Windows"
                export MSYS_NO_PATHCONV=1 # turn off path conversion
        else
                export OPERATING_SYSTEM="Other"
        fi
}
## End os function
os

## Determine current host IP address
function hostip
{
	case "${OPERATING_SYSTEM}" in
        "Linux")
                export HOST_IP=$(hostname -I | tr " " "\n" | head -1) # Linux
                ;;
        "MacOS")
                export HOST_IP=$(ifconfig | grep -v 127.0.0.1 | grep -v inet6 | grep inet | head -n 1 | awk '{print $2}') # Mac OS
                ;;
        "Windows")
                export HOST_IP=$( ((ipconfig | grep IPv4 | grep 10.187 | tail -1) && (ipconfig | grep IPv4 | grep 3. | head -1)) | tail -1 | awk '{print $14}' ) # Git bash
                ;;
        *)
                export HOST_IP=$(hostname)
                ;;
	esac
}
## End hostip function 
hostip

